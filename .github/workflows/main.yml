name: SpotDL Music Downloader

on:
  workflow_dispatch:
    inputs:
      spotify_url:
        description: 'Spotify Song/Playlist/Album URL'
        required: true
        type: string

jobs:
  download_music:
    # Using ubuntu-latest is recommended as it usually has recent tools/versions
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python - By omitting python-version, it uses the action's default (usually recent)
      - name: Set up Python
        uses: actions/setup-python@v5
        # No 'with: python-version' means it uses the default Python version
        # provided by the setup-python action, often the latest stable one
        # it supports or the one pre-installed on the runner.

      # Step 3: Install ffmpeg
      - name: Install ffmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      # Step 4: Install/Upgrade spotdl AND yt-dlp
      - name: Install/Upgrade spotdl and yt-dlp
        run: |
          python -m pip install --upgrade pip # Use 'python -m pip' for clarity
          python -m pip install --upgrade spotdl yt-dlp==2024.11.18

      # Optional: Check versions after setup/upgrade
      - name: Check versions
        run: |
          python --version # Check the Python version being used
          spotdl --version
          yt-dlp --version
          ffmpeg -version

      - name: Create download directory
        run: mkdir music-downloads

      - name: Download music using spotdl
        run: |
          echo "Attempting to download from: ${{ github.event.inputs.spotify_url }}"
          # Using INFO level logging. Use DEBUG for more verbosity if needed.
          spotdl download "${{ github.event.inputs.spotify_url }}" --output ./music-downloads --log-level INFO

      # Debugging Step (Keep it to verify downloads before upload attempt)
      - name: List files in download directory
        run: |
          echo "Current directory: $(pwd)"
          echo "Listing contents of ./music-downloads/:"
          ls -la ./music-downloads/
          echo "Listing contents of current directory:"
          ls -la .

      - name: Upload Music Artifact
        uses: actions/upload-artifact@v4
        with:
          name: downloaded-music
          path: ./music-downloads/
          retention-days: 7
          # Fail the workflow explicitly if no files were downloaded
          if-no-files-found: error
